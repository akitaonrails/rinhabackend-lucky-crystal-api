version: '3.5'
services:
  api1: &api
    #image: docker.io/akitaonrails/rinhabackend-crystal:latest
    build: .
    environment:
      DATABASE_URL: postgres://postgres:password@postgres:5432/postgres
      MAX_POOL_SIZE: 40
      BATCH_INSERT_SIZE: 50
      REDIS_HOST: redis
      DEV_HOST: "0.0.0.0"
      PORT: 3000
      LUCKY_ENV: production
      APP_DOMAIN: http://0.0.0.0:9999
      # the following keys are bogus, just so lucky don't complain on startup
      SECRET_KEY_BASE: 31IAERHMv/PendY5eVzMXQ5DfpjgxQ80gZyzEturFWk=
      SEND_GRID_KEY: 8LsM0faiYM2Ydw/de19PBRwkuPW3wETnzj0CY9wsxjA=
    volumes:
      - type: volume
        source: shards_lib
        target: /app/lib
    hostname: api1
    depends_on:
      - redis
      - postgres
    expose:
      - "3000"
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.35'
          memory: '0.3GB'

  api2:
    <<: *api
    hostname: api2

  nginx: # Load Balancer
    image: docker.io/nginx:latest
    command: ["nginx", "-g", "daemon off;"]
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '0.5GB'

  postgres: # Banco de dados
    image: docker.io/postgres
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_MAX_CONNECTIONS: 100
      POSTGRES_SHARED_BUFFERS: 256MB
      POSTGRES_MEM_LIMIT: 1.8GB
    volumes:
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '1.6GB'

  redis:
    image: docker.io/redis:latest
    environment:
      REDIS_ARGS: "--maxmemory 256mb --save \"\" --appendonly no"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.3GB'

volumes:
  shards_lib:
