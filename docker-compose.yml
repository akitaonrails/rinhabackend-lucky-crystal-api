version: '3.5'
services:
  api1: &api
    #image: docker.io/akitaonrails/rinhabackend-crystal:latest
    build: .
    environment:
      DATABASE_URL: postgres://postgres:password@localhost:5432/postgres
      MAX_POOL_SIZE: 200
      BATCH_INSERT_SIZE: 100
      REDIS_HOST: localhost
      REDIS_POOL_SIZE: 9995
      REDIS_POOL_TIMEOUT: 1.0
      DEV_HOST: "0.0.0.0"
      PORT: 3000
      LUCKY_ENV: production
      APP_DOMAIN: http://localhost:9999
      # the following keys are bogus, just so lucky don't complain on startup
      SECRET_KEY_BASE: 31IAERHMv/PendY5eVzMXQ5DfpjgxQ80gZyzEturFWk=
      SEND_GRID_KEY: 8LsM0faiYM2Ydw/de19PBRwkuPW3wETnzj0CY9wsxjA=
    volumes:
      - type: volume
        source: shards_lib
        target: /app/lib
    hostname: api1
    depends_on:
      - redis
      - postgres
    network_mode: host
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.4GB'

  api2:
    <<: *api
    hostname: api2
    environment:
      DATABASE_URL: postgres://postgres:password@localhost:5432/postgres
      MAX_POOL_SIZE: 200
      BATCH_INSERT_SIZE: 100
      REDIS_HOST: localhost
      REDIS_POOL_SIZE: 9995
      REDIS_POOL_TIMEOUT: 1.0
      DEV_HOST: "0.0.0.0"
      PORT: 3001
      LUCKY_ENV: production
      APP_DOMAIN: http://localhost:9999
      # the following keys are bogus, just so lucky don't complain on startup
      SECRET_KEY_BASE: 31IAERHMv/PendY5eVzMXQ5DfpjgxQ80gZyzEturFWk=
      SEND_GRID_KEY: 8LsM0faiYM2Ydw/de19PBRwkuPW3wETnzj0CY9wsxjA=

  nginx: # Load Balancer
    image: docker.io/nginx:latest
    command: ["nginx", "-g", "daemon off;"]
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    network_mode: host
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.5GB'

  postgres: # Banco de dados
    image: docker.io/postgres
    environment:
      POSTGRES_PASSWORD: password
    volumes:
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    command: postgres -c "max_connections=450"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.9'
          memory: '1.4GB'

  redis:
    image: docker.io/redis:latest
    hostname: redis
    command: redis-server --save "" --appendonly no --maxclients 20000
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.3GB'

volumes:
  shards_lib:
