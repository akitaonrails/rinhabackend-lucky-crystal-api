version: '3.5'
services:
  api1: &api
    #image: docker.io/akitaonrails/rinhabackend-crystal:latest
    build: .
    environment:
      DATABASE_URL: postgres://postgres:password@pgbouncer:5432/postgres
      DEV_HOST: "0.0.0.0"
      APP_DOMAIN: http://0.0.0.0:9999
    volumes:
      - type: volume
        source: shards_lib
        target: /app/lib
    hostname: api1
    depends_on:
      - pgbouncer
    expose:
      - "3000"
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.30'
          memory: '0.2GB'

  api2:
    <<: *api
    hostname: api2

  nginx: # Load Balancer
    image: docker.io/nginx:latest
    command: ["nginx", "-g", "daemon off;"]
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: '0.3GB'

  postgres: # Banco de dados
    image: docker.io/postgres
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: md5
      POSTGRES_INITDB_ARGS: --auth=md5
    volumes:
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.70'
          memory: '2.1GB'

  pgbouncer:
    image: docker.io/edoburu/pgbouncer:latest
    environment:
      - DATABASE_URL=postgres://postgres:password@postgres:5432/postgres
      - ADMIN_USERS=postgres,admin
      - POOL_MODE=session
      - MAX_CLIENT_CONN=200
      - DEFAULT_POOL_SIZE=100
    ports:
      - "5432:5432"
    depends_on:
      - postgres
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: '0.2GB'

volumes:
  shards_lib:
